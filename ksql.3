.\"	$Id$
.\"
.\" Copyright (c) 2016--2017 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KSQL 3
.Os
.Sh NAME
.Nm ksql
.Nd yet another SQLite wrapper
.Sh LIBRARY
.Lb ksql
.Sh SYNOPSIS
.In stdint.h
.In ksql.h
.Fd #define KSQL_VMAJOR x
.Fd #define KSQL_VMINOR y
.Fd #define KSQL_VBUILD z
.Fd #define KSQL_VERSION "x.y.z"
.Fd #define KSQL_VSTAMP xxxyyyzzz
.Sh DESCRIPTION
The
.Nm ksql
library is a
.Dq lazy man's
wrapper of a minimal subset of the SQLite C API.
It makes interfacing with SQLite easy and fast for you, and safe for
your database.
.Pp
The typical usage scenario is as follows:
.Bl -enum
.It
assign configuration defaults with
.Xr ksql_cfg_defaults 3
and pre-set SQL statements in the
.Fa stmts
array;
.It
allocate a handle with
.Xr ksql_alloc_child 3
or, for reduced security,
.Xr ksql_alloc 3 ;
.It
open a database connection on that handle with
.Xr ksql_open 3 ;
.It
create statements with
.Xr ksql_stmt_alloc 3
and use them with
.Xr ksql_bind_double 3 ,
.Xr ksql_stmt_double 3 ,
and
.Xr ksql_stmt_free 3 ;
or
.It
execute statements with
.Xr ksql_exec 3 ;
.It
close and free with
.Xr ksql_free 3 .
.El
.Pp
There's also support for maintaining transactional consistency with
.Xr ksql_trans_open 3
and
.Xr ksql_trans_commit 3 .
Invoke
.Dq apropos ksql
to see all functions.
.Pp
The current version of the database is defined in
.Dv KSQL_VERSION
as a string of major number, minor number, and build.
These values are available seperately as
.Dv KSQL_VMAJOR ,
.Dv KSQL_VMINOR ,
and
.Dv KSQL_VBUILD ,
respectively.
A numeric concatenation of the version is defined as
.Dv KSQL_VSTAMP ,
which may be used to test for version number applicability.
.Ss Database safety
By default (see
.Xr ksql_alloc 3
and
.Xr ksql_alloc_child 3 ) ,
the library will invoke
.Xr exit 3
if any of the database functions fail.
.Dq Failure
means that any SQLite function (for example, stepping for result rows or
binding parameters) that fails will trigger exit.
.Pp
It will also register an
.Xr atexit 3
hook that will clean up any open database connections, transactions, and
open statements.
.Pp
Lastly, it will intercept the
.Dv SIGABRT
and
.Dv SIGSEGV
and trigger a controlled exit.
Thus, if your program is signalled while performing (say) transactions,
or any sort of open database, you won't corrupt the data.
.Pp
All of these safety measures can be disabled by providing the
appropriate flags to
.Xr ksql_alloc 3
or
.Xr ksql_alloc_child 3 .
.Ss Compiling and linking
To compile with
.Nm ksql ,
use the header file
.In ksql.h .
For linking, use
.Fl l Ns Ar ksql
.Fl l Ns Ar sqlite3 .
.Ss Access protocol
Since SQLite uses a busy-wait approach,
.Nm
will sleep for random intervals between attempts returning
.Dv SQLITE_BUSY
or
.Dv SQLITE_LOCKED .
Within the first 10 attempts, the random interval is within 1/4 second.
Within the 10\(en100 attempts, within 1/10 second.
Greater than 100 attempts, 1/100 second.
This scheme benefits longer waiters.
.Pp
Functions using this algorithm are
.Xr ksql_exec 3 ,
.Xr ksql_stmt_step 3
and
.Xr ksql_stmt_cstep 3 ,
and
.Xr ksql_stmt_alloc 3 .
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh IMPLEMENTATION NOTES
.\" Not used in OpenBSD.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr ksql_alloc 3 ,
.Xr ksql_alloc_child 3 ,
.Xr ksql_bind_blob 3 ,
.Xr ksql_bind_bytes 3 ,
.Xr ksql_bind_double 3 ,
.Xr ksql_bind_int 3 ,
.Xr ksql_bind_str 3 ,
.Xr ksql_bind_zblob 3 ,
.Xr ksql_cfg_defaults 3 ,
.Xr ksql_close 3 ,
.Xr ksql_exec 3 ,
.Xr ksql_free 3 ,
.Xr ksql_lastid 3 ,
.Xr ksql_open 3 ,
.Xr ksql_stmt_alloc 3 ,
.Xr ksql_stmt_blob 3 ,
.Xr ksql_stmt_bytes 3 ,
.Xr ksql_stmt_cstep 3 ,
.Xr ksql_stmt_double 3 ,
.Xr ksql_stmt_free 3 ,
.Xr ksql_stmt_int 3 ,
.Xr ksql_stmt_isnull 3 ,
.Xr ksql_stmt_reset 3 ,
.Xr ksql_stmt_step 3 ,
.Xr ksql_stmt_str 3 ,
.Xr ksql_trans_commit 3 ,
.Xr ksql_trans_exclopen 3 ,
.Xr ksql_trans_functions 3 ,
.Xr ksql_trans_open 3 ,
.Xr ksql_trans_rollback 3 ,
.Xr sqlite3 3
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.Sh CAVEATS
This library is not thread-safe and does not plan to be.
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
