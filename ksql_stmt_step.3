.\"	$Id$
.\"
.\" Copyright (c) 2016 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KSQL_STMT_STEP 3
.Os
.Sh NAME
.Nm ksql_stmt_cstep ,
.Nm ksql_stmt_step
.Nd get the next row of results from a statement
.Sh LIBRARY
.Lb ksql
.Sh SYNOPSIS
.In sys/types.h
.In stdint.h
.In ksql.h
.Ft enum ksqlc
.Fo ksql_stmt_step
.Fa "struct ksqlstmt *stmt"
.Fc
.Ft enum ksqlc
.Fo ksql_stmt_cstep
.Fa "struct ksqlstmt *stmt"
.Fc
.Sh DESCRIPTION
The
.Fn ksql_stmt_step
and
.Fn ksql_stmt_cstep
functions query the next row of results from a statement prepared with
.Xr ksql_stmt_alloc 3 .
The two functions differ in that
.Fn ksql_stmt_step
fails when a constraint is violated, while
.Fn ksql_stmt_cstep
returns
.Dv KSQL_CONSTRAINT
instead.
.Pp
These functions handle a locked database (specifically,
.Dv SQLITE_BUSY ,
.Dv SQLITE_LOCKED ,
or
.Dv SQLITE_PROTOCOL )
by sleeping for a random interval, then trying again infinitely.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh IMPLEMENTATION NOTES
.\" Not used in OpenBSD.
.Sh RETURN VALUES
These functions return several error conditions:
.Dv KSQL_NOTOPEN
if the database connection has not been opened;
.Dv KSQL_DB
on database errors, including constraint violations with
.Fn ksql_stmt_step ;
and
.Dv KSQL_MEM
on memory allocation failure.
.Pp
It also returns the following non-error conditions:
.Dv KSQL_ROW
if a row is available for examining,
.Dv KSQL_DONE
if no more rows are available, or
.Dv KSQL_CONSTRAINT
if
.Fn ksql_stmt_cstep
was used and a constraint was violated,
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr sqlite3_step 3
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
